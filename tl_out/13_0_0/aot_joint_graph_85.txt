class joint_fn(torch.nn.Module):
    def forward(self, primals, tangents):
        primals_1: "f32[s1, 256][256, 1]cuda:0"; primals_2: "i64[257][1]cuda:0"; primals_3: "f32[s3, 0][1, 1]cuda:0"; primals_4: "f32[s4, 0][1, 1]cuda:0"; primals_5: "Sym(s0)"; tangents_1: "f32[s1, 256][256, 1]cuda:0"; 
    
        primals_1, primals_2, primals_3, primals_4, primals_5, tangents_1, = fx_pytree.tree_flatten_spec([primals, tangents], self._in_spec)
         # File: /home/ec2-user/code/RQ-VAE-Recommender/modules/utils.py:67 in jagged_to_flattened_tensor, code: return x.values()
        alias: "f32[s1, 256][256, 1]cuda:0" = torch.ops.aten.alias.default(primals_1);  primals_1 = None
        return pytree.tree_unflatten([alias, tangents_1, primals_2, primals_3, primals_4, None], self._out_spec)
        